name: Deploy to GKE

on:
  workflow_dispatch: # Triggered on-demand

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}

    - name: Authenticate to Google Cloud
      run: gcloud auth activate-service-account --key-file=${{ secrets.GCP_SA_KEY }}

    - name: Configure Docker to use gcloud command-line tool as a credential helper
      run: gcloud auth configure-docker

    - name: Fetch DB_NAME secret
      id: get-db-name
      run: echo "::set-output name=db_name::$(gcloud secrets versions access latest --secret=db_name)"

    - name: Fetch DB_USER secret
      id: get-db-user
      run: echo "::set-output name=db_user::$(gcloud secrets versions access latest --secret=db_user)"

    - name: Fetch DB_PASSWORD secret
      id: get-db-password
      run: echo "::set-output name=db_password::$(gcloud secrets versions access latest --secret=db_password)"

    - name: Fetch INSTANCE_CONNECTION_NAME secret
      id: get-instance-connection-name
      run: echo "::set-output name=instance_connection_name::$(gcloud secrets versions access latest --secret=instance_connection_name)"

    - name: Create Kubernetes secrets
      run: |
        kubectl create secret generic db-credentials \
          --from-literal=db_name=${{ steps.get-db-name.outputs.db_name }} \
          --from-literal=db_user=${{ steps.get-db-user.outputs.db_user }} \
          --from-literal=db_password=${{ steps.get-db-password.outputs.db_password }} \
          --from-literal=instance_connection_name=${{ steps.get-instance-connection-name.outputs.instance_connection_name }} \
          --dry-run=client -o yaml | kubectl apply -f -

    - name: Deploy to GKE
      run: kubectl apply -f deployment.yaml
